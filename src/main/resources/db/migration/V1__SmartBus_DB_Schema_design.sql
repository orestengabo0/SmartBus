create table bus_park
(
    active         boolean          not null,
    latitude       double precision not null,
    longitude      double precision not null,
    created_at     timestamp(6),
    id             bigint generated by default as identity
        primary key,
    address        varchar(255),
    contact_number varchar(255),
    location       varchar(255)     not null,
    name           varchar(255)     not null
);

alter table bus_park
    owner to postgres;

create table route
(
    active                     boolean          not null,
    distance_km                double precision not null,
    estimated_duration_minutes integer          not null,
    price                      double precision not null,
    created_at                 timestamp(6),
    id                         bigint generated by default as identity
        primary key,
    destination                varchar(255)     not null,
    origin                     varchar(255)     not null
);

alter table route
    owner to postgres;

create table users
(
    created_at timestamp(6),
    id         bigint generated by default as identity
        primary key,
    email      varchar(255),
    full_name  varchar(255),
    password   varchar(255),
    phone      varchar(255),
    role       varchar(255)
        constraint users_role_check
            check ((role)::text = ANY
                   ((ARRAY ['USER'::character varying, 'ADMIN'::character varying, 'OPERATOR'::character varying, 'SUPER_ADMIN'::character varying])::text[]))
);

alter table users
    owner to postgres;

create table bus
(
    active              boolean      not null,
    total_seats         integer      not null,
    year_of_manufacture integer      not null,
    created_at          timestamp(6),
    current_bus_park_id bigint
        constraint fk3hd8cddlkfs8dr96thxqkor9o
            references bus_park,
    id                  bigint generated by default as identity
        primary key,
    operator_id         bigint
        constraint fk63mxgjsu8sf785na5ch0n0jfg
            references users,
    bus_model           varchar(255),
    bus_type            varchar(255),
    plate_number        varchar(255) not null
);

alter table bus
    owner to postgres;

create table notification
(
    read      boolean not null,
    id        bigint generated by default as identity
        primary key,
    timestamp timestamp(6),
    user_id   bigint
        constraint fknk4ftb5am9ubmkv1661h15ds9
            references users,
    message   varchar(255)
);

alter table notification
    owner to postgres;

create table refresh_token
(
    expiry_date timestamp(6),
    id          bigint generated by default as identity
        primary key,
    user_id     bigint
        constraint fkjtx87i0jvq2svedphegvdwcuy
            references users,
    device_info varchar(255),
    issued_ip   varchar(255),
    token       varchar(255)
);

alter table refresh_token
    owner to postgres;

create table seat
(
    additional_price double precision not null,
    is_booked        boolean          not null,
    seat_number      integer          not null,
    bus_id           bigint
        constraint fka6qq7pw25gw8a9mqfbb1atl6t
            references bus,
    id               bigint generated by default as identity
        primary key,
    deck             varchar(255),
    seat_type        varchar(255)
);

alter table seat
    owner to postgres;

create table trip
(
    active            boolean          not null,
    amount            double precision not null,
    available_seats   integer          not null,
    arrival_park_id   bigint
        constraint fk6nkjpykpjehj0yw9f8emtfk3n
            references bus_park,
    arrival_time      timestamp(6),
    bus_id            bigint
        constraint fkptvi61dd1hao1yig3in0gvcjs
            references bus,
    created_at        timestamp(6),
    departure_park_id bigint
        constraint fk31qlj9ps6iffcppxdy6orl6gp
            references bus_park,
    departure_time    timestamp(6),
    id                bigint generated by default as identity
        primary key,
    route_id          bigint
        constraint fkeva4adpyk6glllffnw5ypj20j
            references route,
    version           bigint,
    status            varchar(255)
        constraint trip_status_check
            check ((status)::text = ANY
                   ((ARRAY ['SCHEDULED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying])::text[]))
);

alter table trip
    owner to postgres;

create table booking
(
    price        double precision,
    booking_time timestamp(6),
    expiry_time  timestamp(6),
    id           bigint generated by default as identity
        primary key,
    trip_id      bigint
        constraint fkkp5ujmgvd2pmsehwpu2vyjkwb
            references trip,
    user_id      bigint
        constraint fk7udbel7q86k041591kj6lfmvw
            references users,
    status       varchar(255)
        constraint booking_status_check
            check ((status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'CONFIRMED'::character varying, 'CANCELLED'::character varying, 'EXPIRED'::character varying])::text[]))
);

alter table booking
    owner to postgres;

create table booking_seats
(
    seat_number integer,
    booking_id  bigint not null
        constraint fkiafqjbiteckjb95679jbqwona
            references booking
);

alter table booking_seats
    owner to postgres;

create table payment
(
    amount         double precision not null,
    booking_id     bigint
        unique
        constraint fkqewrl4xrv9eiad6eab3aoja65
            references booking,
    id             bigint generated by default as identity
        primary key,
    payment_time   timestamp(6),
    payment_method varchar(255)
        constraint payment_payment_method_check
            check ((payment_method)::text = ANY
                   ((ARRAY ['MOBILE_MONEY'::character varying, 'CREDIT_CARD'::character varying])::text[])),
    status         varchar(255)
        constraint payment_status_check
            check ((status)::text = ANY
                   ((ARRAY ['COMPLETED'::character varying, 'FAILED'::character varying])::text[])),
    transaction_id varchar(255)
);

alter table payment
    owner to postgres;

create table ticket
(
    validated       boolean not null,
    booking_id      bigint
        unique
        constraint fkrg7x158t96nucwslhq2bad6qm
            references booking,
    id              bigint generated by default as identity
        primary key,
    issue_time      timestamp(6),
    validation_time timestamp(6),
    ticket_number   varchar(255),
    qrcode          bytea
);

alter table ticket
    owner to postgres;

